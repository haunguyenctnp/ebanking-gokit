// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/haunguyenctnp/ebanking-gokit/accounts/pkg/service"

	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	DepositEndpoint         endpoint.Endpoint
	WithdrawEndpoint        endpoint.Endpoint
	DropEndpoint            endpoint.Endpoint
	CreateEndpoint          endpoint.Endpoint
	GetAccountEndpoint      endpoint.Endpoint
	DepositAccountEndpoint  endpoint.Endpoint
	WithdrawAccountEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AccountsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateEndpoint:          MakeCreateEndpoint(s),
		DepositAccountEndpoint:  MakeDepositAccountEndpoint(s),
		DepositEndpoint:         MakeDepositEndpoint(s),
		DropEndpoint:            MakeDropEndpoint(s),
		GetAccountEndpoint:      MakeGetAccountEndpoint(s),
		WithdrawAccountEndpoint: MakeWithdrawAccountEndpoint(s),
		WithdrawEndpoint:        MakeWithdrawEndpoint(s),
	}
	for _, m := range mdw["Deposit"] {
		eps.DepositEndpoint = m(eps.DepositEndpoint)
	}
	for _, m := range mdw["Withdraw"] {
		eps.WithdrawEndpoint = m(eps.WithdrawEndpoint)
	}
	for _, m := range mdw["Drop"] {
		eps.DropEndpoint = m(eps.DropEndpoint)
	}
	for _, m := range mdw["Create"] {
		eps.CreateEndpoint = m(eps.CreateEndpoint)
	}
	for _, m := range mdw["GetAccount"] {
		eps.GetAccountEndpoint = m(eps.GetAccountEndpoint)
	}
	for _, m := range mdw["DepositAccount"] {
		eps.DepositAccountEndpoint = m(eps.DepositAccountEndpoint)
	}
	for _, m := range mdw["WithdrawAccount"] {
		eps.WithdrawAccountEndpoint = m(eps.WithdrawAccountEndpoint)
	}
	return eps
}
